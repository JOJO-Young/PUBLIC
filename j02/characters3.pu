@startuml
class Line{

    -Position[] positions

    +Line(int length)
    +void put(Linable linable, int i)
    +Linable get(int i)
    +Linable[] toArray()

    +String toString()
}

Class Position{

    -Linable linable

    +Position(Linable linable)
    +void setLinable(Linable linable)
}

Interface Linable{
    
    +void setPosition()
    +Position getPosition()
    +int getValue()
}

Interface Sorter{
    
    +void load(int[] elements)
    +void sort()
    +String getPlan()
}
Class SmallDevil{

    -int r
    -int g
    -int b
    -Position position
    +HashMap<Integer, SmallDevil> hashMap

    +SmallDevil(int r, int g, int b)
    +int rank()
    +void swapPosition(SmallDevil another)

    +String toString()
}

Class BubbleSorter{

    -int[] a
    -String plan

    -void swap(int i, int j)
}

Class QuickSorter{

    -int[] a
    -String plan
    
    -void swap(int i, int j)
    -void quickSorter(int left, int right)
}

Class InsertSorter{
    -int[] a
    -String plan

    -void move(int from, int to)
    -void swap(int i, int j)
}

Class SelectionSorter{
    -int[] a
    -String plan

    -void move(int from, int to)
    -void swap(int i, int j)
}
 
Class SnakeSpirit{

    -SnakeSpirit theSnakeSpirit
    -Sorter sorter
    
    +SnakeSpirit getTheSnakeSpirit()
    +void setSorter(Sorter sorter)
    +String lineUp(Line line)
    -String[] parsePlan(String plan)
    -void execute(String step)
}

Class Scene{

    Square square 
    SnakeSpirit theSnakeSpirit
}

Class Square{

    +int maxCol;

    +Square(int row, int col)
    +put(Linable linable, int row, int col)
    +get(int row, int col)

    +String toString()
}
Square --|> Line : extend
Scene *-- Square : 组合
Scene *-- SnakeSpirit : 组合
SnakeSpirit ..> Line : dependence
Line --+ Position: inner class
SmallDevil ..|> Linable : implements
BubbleSorter ..|> Sorter : implements
QuickSorter ..|> Sorter : implements
InsertSorter ..|> Sorter : implements
SelectionSorter ..|> Sorter : implements
Position o-- Linable : has-a
SnakeSpirit o-- Sorter : has-a
@enduml
